(load "package://pr2eus/pr2-interface.l")
(load "package://pr2eus_openrave/pr2eus-openrave.l")
;; (load "models/load-irt-all-models")
(load "package://euslisp/jskeus/eus/models/room73b2-scene.l")
(load "package://euslib/demo/mikita/pr2_action_function.l")
(load "package://euslib/demo/mikita/tabletop_detect.l")
(ros::load-ros-manifest "color_handle_detector")
(ros::load-ros-manifest "dynamic_reconfigure_eus")
(load "package://color_handle_detector/src/color_handle_detector_client_lib.l")

(when (not (boundp '*ri*))
  (ros::roseus "plan")
  (pr2)
  (room73b2)
  (setq *ri* (instance pr2-interface :init))
  (setq *tfl* (instance ros::transform-listener :init)))
;;(send *ri* :viewer :objects (list (send *ri* :robot) *table* *cup* *trashbox* *chair0* *chair1* *petbottle* *pockey* *kitchen*))
;;(objects (list *pr2* *room73b2*))
(send *ri* :objects (send *room73b2* :objects))
;;(send *ri* :objects *room73b2*)

(defun tmp ()
  ;;(change-inflation-range 0.15)
  ;;(initialize-costmap)
  ;;(send *pr2* :move-to (send *chair1back* :worldcoords) :world)
  (send *pr2* :move-to (send *room73b2* :spot "/eng2/7f/room73B2-chair-back") :world)
  ;;(send *ri* :move-to (send *pr2* :coords))
  (send *ri* :move-to (send *pr2* :coords) :frame-id "/eng2/7f/73B2")
;;;
  ;;(setq *initchairspot* (make-coords :coords (send *pr2* :coords) :name "initchairspot"))
;;;
  ;; ;;(send *pr2* :larm :inverse-kinematics (send *chair1* :handle-larm))
  ;; ;;(send *pr2* :rarm :inverse-kinematics (send *chair1* :handle-rarm))
  ;; (send *pr2* :larm :inverse-kinematics (send (send *room73b2* :object "room73b2-chair1") :handle-larm))
  ;; (send *pr2* :rarm :inverse-kinematics (send (send *room73b2* :object "room73b2-chair1") :handle-rarm))

  ;; ;;(send (send (send (send *room73b2* :object "room73b2-chair1") :handle-larm) :worldcoords) :draw-on :flush t :size 100 )
  ;; ;;gripperaction :botharm open->grasp
  ;; (send *ri* :move-gripper :larm 0.08 :wait nil)
  ;; (send *ri* :move-gripper :rarm 0.08 :wait nil)
  ;; (send *ri* :angle-vector (send *pr2* :angle-vector))
  ;; (send *ri* :wait-interpolation)
  ;; (send *ri* :move-gripper :larm 0.005 :wait nil)
  ;; (send *ri* :move-gripper :rarm 0.005 :wait t)
  ;; ;;(send *ri* :robot :larm :end-coords :assoc *chair1*)
  (hold-chair2 (send *room73b2* :object "room73b2-chair1"))
  (send *ri* :robot :larm :end-coords :assoc (send *room73b2* :object "room73b2-chair1"))
  ;;(move *pr2* -300 1000 0 0)
;;;
  (setq *temporarychairspot* (make-coords :coords (send (send *pr2* :copy-worldcoords) :translate #f(-300 1000 0) :world) :name "temporarychairspot"))
;;;
  (send *pr2* :move-to (send *temporarychairspot* :worldcoords) :world)
  ;;(send *ri* :move-to (send *pr2* :coords))
  ;;(send *ri* :move-to (send *pr2* :coords) :frame-id "/eng2/7f/73B2")
;;  (send *ri* :go-pos-unsafe -0.3 0)
  (send *ri* :go-pos-unsafe 0 1)
  ;;gripperaction :botharm open
  ;; (send *ri* :move-gripper :larm 0.08 :wait nil)
  ;; (send *ri* :move-gripper :rarm 0.08 :wait t)
  ;;(send *ri* :robot :larm :end-coords :dissoc *chair1*)
  (send *ri* :robot :larm :end-coords :dissoc (send *room73b2* :object "room73b2-chair1"))
  (release-chair2 (send *room73b2* :object "room73b2-chair1"))

  (pr2-tuckarm-pose :larm)
  ;;(send *ri* :move-gripper :larm 0.005 :wait nil)
  ;;(send *ri* :move-gripper :rarm 0.005 :wait nil)
  ;;(move *pr2* 1000 -1000 0 0)
  ;;(send *pr2* :move-to (send *tablefront* :worldcoords) :world)
  (send *pr2* :move-to (send *room73b2* :spot "/eng2/7f/room73B2-table-side") :world)
  ;;(send *ri* :move-to (send *pr2* :coords))
  (send *ri* :move-to (send *pr2* :coords) :frame-id "/eng2/7f/73B2")
  ;;(send *pr2* :larm :inverse-kinematics (send *cup* :handle-handle0))
  ;; (send *pr2* :larm :inverse-kinematics (send (send *room73b2* :object "room73b2-sushi-cup2") :handle-handle0))
  ;; ;;gripperaction :larm open->grasp
  ;; (send *ri* :move-gripper :larm 0.08 :wait nil)
  ;; (send *ri* :angle-vector (send *pr2* :angle-vector))
  ;; (send *ri* :move-gripper :larm 0.005 :wait t)
  (pick (send (send *room73b2* :object "room73b2-sushi-cup2") :handle-handle0) :arm :larm :use-torso t)
  ;;(send *ri* :robot :larm :end-coords :assoc *cup*)
  (send *ri* :robot :larm :end-coords :assoc (send *room73b2* :object "room73b2-sushi-cup2"))

  (pr2-tuckarm-pose :larm)
  (send *pr2* :torso :waist-z :joint-angle 0)
  (send *ri* :angle-vector (send *pr2* :angle-vector))
  ;;(move *pr2* -1400 1500 0 pi)
  ;;(send *pr2* :move-to (send *sinkfront* :worldcoords) :world)
  (send *pr2* :move-to (send *room73b2* :spot "/eng2/7f/room73B2-front-of-sink") :world)
  ;;(send *ri* :move-to (send *pr2* :coords))
  (send *ri* :move-to (send *pr2* :coords) :frame-id "/eng2/7f/73B2")
  ;;(send *pr2* :inverse-kinematics (make-coords :pos #f(-1350 1400 750) :rot (unit-matrix 3)) :move-arm :larm :use-torso nil :null-space #f(0 -0.11 0 0 -0.6 0 0) :rotation-axis nil)
  (send *pr2* :inverse-kinematics (send (send (send *room73b2* :object "room73b2-kitchen") :copy-worldcoords) :translate #f(150 400 750)) :move-arm :larm :use-torso t :null-space #f(0 -0.11 0 0 -0.6 0 0) :rotation-axis nil)
  (send *ri* :angle-vector (send *pr2* :angle-vector))
  ;;gripperaction :larm open
  (send *ri* :move-gripper :larm 0.08 :wait t)
  ;;(send *ri* :robot :larm :end-coords :dissoc *cup*)
  (send *ri* :robot :larm :end-coords :dissoc (send *room73b2* :object "room73b2-sushi-cup2"))

  (dotimes (i 15)
    ;;  (send *cup* :translate (float-vector 0 0 (- 0 i)) :world)
    (send (send *room73b2* :object "room73b2-sushi-cup2") :translate (float-vector 0 0 (- 0 i)) :world)
    (send *ri* :viewer :draw-objects))

  (pr2-tuckarm-pose :rarm)
  (send *ri* :move-gripper :larm 0.005 :wait nil)
  ;;(move *pr2* 1400 -1500 0 0)
  ;;(send *pr2* :move-to (send *tablefront* :worldcoords) :world)
  (send *pr2* :move-to (send *room73b2* :spot "/eng2/7f/room73B2-table-side") :world)
  ;;(send *ri* :move-to (send *pr2* :coords))
  (send *ri* :move-to (send *pr2* :coords) :frame-id "/eng2/7f/room73B2")
  ;;(send *pr2* :rarm :inverse-kinematics (send *petbottle* :handle-handle0))
  ;; (send *pr2* :rarm :inverse-kinematics (send (send *room73b2* :object "room73b2-pet2") :handle-handle0))
  ;; ;;gripperaction :rarm open->grasp
  ;; (send *ri* :move-gripper :rarm 0.08 :wait nil)
  ;; (send *ri* :angle-vector (send *pr2* :angle-vector))
  ;; (send *ri* :move-gripper :rarm 0.005 :wait t)
  (pick (send (send *room73b2* :object "room73b2-pet2") :handle-handle0) :arm :rarm :use-torso nil)
  ;;(send *ri* :robot :rarm :end-coords :assoc *petbottle*)
  (send *ri* :robot :rarm :end-coords :assoc (send *room73b2* :object "room73b2-pet2"))
  (send *pr2* :rarm :angle-vector #f(-25 0 0 -130 0 0 0))
  (send *ri* :angle-vector (send *pr2* :angle-vector))
  ;;(send *pr2* :inverse-kinematics (send (send (send *pockey* :handle-handle0) :copy-worldcoords) :translate #f(0 0 25) :world) :move-arm :larm :use-torso nil :null-space #f(0 -0.16 0 0 0 0 0))
  ;; (send *pr2* :inverse-kinematics (send (send (send (send *room73b2* :object "room73b2-pockey") :handle-handle0) :copy-worldcoords) :translate #f(0 0 25) :world) :move-arm :larm :use-torso nil :null-space #f(0 -0.16 0 0 0 0 0))
  ;; ;;gripperaction :larm open->grasp
  ;; (send *ri* :move-gripper :larm 0.08 :wait nil)
  ;; (send *ri* :angle-vector (send *pr2* :angle-vector))
  ;; (send *ri* :move-gripper :larm 0.005 :wait t)
  (pick (send (send (send (send *room73b2* :object "room73b2-pockey") :handle-handle0) :copy-worldcoords) :translate #f(0 0 25) :world) :arm :larm :use-torso nil)
  ;;(send *ri* :robot :larm :end-coords :assoc *pockey*)
  (send *ri* :robot :larm :end-coords :assoc (send *room73b2* :object "room73b2-pockey"))

  (pr2-tuckarm-pose :rarm)
  ;;(move *pr2* -1500 -500 0 -pi/2)
  ;;(send *pr2* :move-to (send *trashboxfront* :worldcoords) :world)
  (send *pr2* :move-to (send *room73b2* :spot "/eng2/7f/room73B2-front-of-trashbox") :world)
  ;;(send *ri* :move-to (send *pr2* :coords))
  (send *ri* :move-to (send *pr2* :coords) :frame-id "/eng2/7f/73B2")
  ;;(send *pr2* :rarm :inverse-kinematics (send (send *trashbox* :copy-worldcoords) :translate #f(0 0 500) :world) :rotation-axis nil)
  (send *pr2* :rarm :inverse-kinematics (send (send (send *room73b2* :object "room73b2-trashbox0") :copy-worldcoords) :translate #f(0 0 500) :world) :rotation-axis nil)
  (send *ri* :angle-vector (send *pr2* :angle-vector))
  ;;gripperaction :rarm open
  (send *ri* :move-gripper :rarm 0.08 :wait t)
  ;;(send *ri* :robot :rarm :end-coords :dissoc *petbottle*)
  (send *ri* :robot :rarm :end-coords :dissoc (send *room73b2* :object "room73b2-pet2"))

  (dotimes (i 30)
    ;;  (send *petbottle* :translate (float-vector 0 0 (- 0 i)) :world)
    (send (send *room73b2* :object "room73b2-pet2") :translate (float-vector 0 0 (- 0 i)) :world)
    (send *ri* :viewer :draw-objects))

  (send *pr2* :rarm :angle-vector #f(-25 0 0 -130 0 0 0))
  (send *ri* :move-gripper :rarm 0.005 :wait nil)
  (send *ri* :angle-vector (send *pr2* :angle-vector))

  ;;(send *pr2* :larm :inverse-kinematics (send (send *trashbox* :copy-worldcoords) :translate #f(0 0 600) :world) :rotation-axis nil)
  (send *pr2* :larm :inverse-kinematics (send (send (send *room73b2* :object "room73b2-trashbox0") :copy-worldcoords) :translate #f(0 0 600) :world) :rotation-axis nil)
  (send *ri* :angle-vector (send *pr2* :angle-vector))
  ;;gripperaction :larm open
  (send *ri* :move-gripper :larm 0.08 :wait t)
  ;;(send *ri* :robot :larm :end-coords :dissoc *pockey*)
  (send *ri* :robot :larm :end-coords :dissoc (send *room73b2* :object "room73b2-pockey"))

  (dotimes (i 30)
    ;;  (send *pockey* :translate (float-vector 0 0 (- 0 i)) :world)
    (send (send *room73b2* :object "room73b2-pockey") :translate (float-vector 0 0 (- 0 i)) :world)
    (send *ri* :viewer :draw-objects))

  (pr2-tuckarm-pose :larm)
  (send *ri* :move-gripper :larm 0.005 :wait nil)
  ;;(move *pr2* 1500 500 0 0)
  ;;(send *pr2* :move-to (send *tablefront* :worldcoords) :world)
  (send *pr2* :move-to (send *room73b2* :spot "/eng2/7f/room73B2-table-side") :world)
  ;;(send *ri* :move-to (send *pr2* :coords))
  (send *ri* :move-to (send *pr2* :coords) :frame-id "/eng2/7f/73B2")

  ;; ;;take duster
  ;; (send *pr2* :larm :angle-vector #f(0.0 -30.0 180.0 -60.0 180.0 -15.0 0.0))
  ;; (send *pr2* :torso :waist-z :joint-angle 220)
  ;; (send *ri* :angle-vector (send *pr2* :angle-vector))

  ;; (send *pr2* :larm :inverse-kinematics
  ;;       (send (send *pr2* :larm :end-coords :copy-worldcoords) :translate
  ;; 	    (float-vector 0 0
  ;; 			  (- 700 (elt (send *pr2* :larm :end-coords :worldpos) 2))))
  ;;       :rotation-axis t :revert-if-fail nil)
  ;; (send *ri* :angle-vector (send *pr2* :angle-vector))

  ;; (send *pr2* :larm :inverse-kinematics
  ;;       (send (send *pr2* :larm :end-coords :copy-worldcoords) :translate #f(-100 300 0) :world) :rotation-axis t)
  ;; (send *ri* :angle-vector (send *pr2* :angle-vector))

  ;; (dotimes (j 2)
  ;;   (dotimes (i 50)
  ;;     (send *pr2* :larm :inverse-kinematics
  ;; 	  (send (send *pr2* :larm :end-coords :copy-worldcoords) :translate #f(0 -15 0) :world) :rotation-axis t)
  ;;     (send *ri* :angle-vector (send *pr2* :angle-vector) 100)
  ;;     )
  ;;   (send *pr2* :larm :inverse-kinematics
  ;; 	(send (send *pr2* :larm :end-coords :copy-worldcoords) :translate #f(50 0 0) :world) :rotation-axis t)
  ;;   (send *ri* :angle-vector (send *pr2* :angle-vector))

  ;;   (dotimes (i 50)
  ;;     (send *pr2* :larm :inverse-kinematics
  ;; 	  (send (send *pr2* :larm :end-coords :copy-worldcoords) :translate #f(0 15 0) :world) :rotation-axis t)
  ;;     (send *ri* :angle-vector (send *pr2* :angle-vector) 100)
  ;;     ))
  ;; ;;put back duster
  ;; (pr2-tuckarm-pose :larm)
  ;; (send *pr2* :torso :waist-z :joint-angle 0)
  ;; (send *ri* :angle-vector (send *pr2* :angle-vector))
  ;; (send *ri* :wait-interpolation)
  (wipe-table4)

  ;;(move *pr2* -1000 1000 0 0)
  (send *pr2* :move-to (send *temporarychairspot* :worldcoords) :world)
  ;;(send *ri* :move-to (send *pr2* :coords))
  (send *ri* :move-to (send *pr2* :coords) :frame-id "/eng2/7f/73B2")
  (send *pr2* :larm :angle-vector #f(25 0 0 -130 0 0 0))
  (send *pr2* :rarm :angle-vector #f(-25 0 0 -130 0 0 0))
  ;; ;;(send *pr2* :larm :inverse-kinematics (send *chair1* :handle-larm))
  ;; ;;(send *pr2* :rarm :inverse-kinematics (send *chair1* :handle-rarm))
  ;; (send *pr2* :larm :inverse-kinematics (send (send *room73b2* :object "room73b2-chair1") :handle-larm))
  ;; (send *pr2* :rarm :inverse-kinematics (send (send *room73b2* :object "room73b2-chair1") :handle-rarm))
  ;; ;;gripperaction :botharm open->grasp
  ;; (send *ri* :move-gripper :larm 0.08 :wait nil)
  ;; (send *ri* :move-gripper :rarm 0.08 :wait nil)
  ;; (send *ri* :angle-vector (send *pr2* :angle-vector))
  ;; (send *ri* :wait-interpolation)
  ;; (send *ri* :move-gripper :larm 0.005 :wait nil)
  ;; (send *ri* :move-gripper :rarm 0.005 :wait t)
  (hold-chair2 (send *room73b2* :object "room73b2-chair1"))
  ;;(send *ri* :robot :larm :end-coords :assoc *chair1*)
  (send *ri* :robot :larm :end-coords :assoc (send *room73b2* :object "room73b2-chair1"))

  ;;(move *pr2* 300 -1000 0 0)
  ;;(send *pr2* :move-to (send *initchairspot* :worldcoords) :world)
  (send *pr2* :move-to (send *room73b2* :spot "/eng2/7f/room73B2-chair-back") :world)
  ;;(send *ri* :move-to (send *pr2* :coords))
  ;;(send *ri* :move-to (send *pr2* :coords) :frame-id "/eng2/7f/73B2")
  (send *ri* :go-pos-unsafe 0 -1)
  (send *ri* :go-pos-unsafe 0.3 0)
  ;;gripperaction :botharm open
  ;;(send *ri* :move-gripper :larm 0.08 :wait nil)
  ;;(send *ri* :move-gripper :rarm 0.08 :wait t)
  ;;(send *ri* :robot :larm :end-coords :dissoc *chair1*)
  (send *ri* :robot :larm :end-coords :dissoc (send *room73b2* :object "room73b2-chair1"))
  (release-chair2 (send *room73b2* :object "room73b2-chair1"))
  (pr2-tuckarm-pose :rarm)
  ;;(send *ri* :move-gripper :larm 0.005 :wait nil)
  ;;(send *ri* :move-gripper :rarm 0.005 :wait nil)
  )

(defun main (&key (real nil))
  (when real
    (change-inflation-range 0.15)
    (initialize-costmap)
    (ros::spin-once)
    (send *pr2* :angle-vector (send *ri* :state :potentio-vector)))
  (send *room73b2* :init)
  ;;(send *ri* :objects *room73b2*)
  (send *ri* :objects (send *room73b2* :objects))
  ;;(send *ri* :viewer :objects (list (send *ri* :robot) *room73b2*))

  (move-to-room (send *room73b2* :spot "/eng2/7f/room73B2-chair-back") "/eng2/7f/73B2")
  (move-chair (send *room73b2* :object "room73b2-chair1") 0 1.0 0 :direct :x)
  (send *pr2* :move-to (send *ri* :state :worldcoords "/eng2/7f/73B2") :world)
  (pr2-tuckarm-pose :larm)
  (setq *temporarychairspot* (make-coords :coords (send *pr2* :copy-worldcoords) :name "temporarychairspot"))
  (move-to-room (send *room73b2* :spot "/eng2/7f/room73B2-table-side") "/eng2/7f/73B2")
;;  (send *pr2* :translate #f(300 0 0))
;;  (send *ri* :go-pos-unsafe 0.3 0 0)
  (pick (send *room73b2* :object "room73b2-sushi-cup2") :arm :larm :use-torso t)
;;  (send *ri* :go-pos-unsafe -0.3 0 0)
  ;;(send *ri* :robot :larm :end-coords :assoc (send *room73b2* :object "room73b2-sushi-cup2"))
  ;;  (send *pr2* :larm :end-coords :assoc (send *room73b2* :object "room73b2-sushi-cup2"))
  (pr2-tuckarm-pose :larm)
  (send *pr2* :torso :waist-z :joint-angle 0)
  (send *ri* :angle-vector (send *pr2* :angle-vector))
  (send *ri* :wait-interpolation)
  (move-to-room (send *room73b2* :spot "/eng2/7f/room73B2-front-of-sink") "/eng2/7f/73B2")
;;  (send *pr2* :translate #f(150 0 0))
;;  (send *ri* :go-pos-unsafe 0.15 0 0)
  ;; (release (send (send (send *room73b2* :object "room73b2-kitchen") :copy-worldcoords) :translate #f(150 400 750)) :arm :larm :null-space #f(0 -0.11 0 0 -0.6 0 0) :rotation-axis nil :use-torso nil)
  (release (send (send (send *room73b2* :object "room73b2-kitchen") :copy-worldcoords) :translate #f(180 400 900)) :arm :larm :use-torso t :rotation-axis nil)
 ;; (send *ri* :go-pos-unsafe -0.15 0 0)
  ;;(send *ri* :robot :larm :end-coords :dissoc (send *room73b2* :object "room73b2-sushi-cup2"))
  ;;  (send *pr2* :larm :end-coords :dissoc (send *room73b2* :object "room73b2-sushi-cup2"))
  (dotimes (i 15)
    (send (send *room73b2* :object "room73b2-sushi-cup2") :translate (float-vector 0 0 (- 0 i)) :world)
    (send *ri* :viewer :draw-objects))
  (pr2-tuckarm-pose :rarm)
  (send *pr2* :torso :waist-z :joint-angle 0)
  (send *ri* :angle-vector (send *pr2* :angle-vector))
  (send *ri* :wait-interpolation)
  (move-to-room (send *room73b2* :spot "/eng2/7f/room73B2-table-side") "/eng2/7f/73B2")
 ;; (send *pr2* :translate #f(300 0 0))
  ;;(send *ri* :go-pos-unsafe 0.3 0 0)
  (pick (send *room73b2* :object "room73b2-pet2") :arm :rarm :use-torso t)
  ;;(send *ri* :robot :rarm :end-coords :assoc (send *room73b2* :object "room73b2-pet2"))
  ;;  (send *pr2* :rarm :end-coords :assoc (send *room73b2* :object "room73b2-pet2"))
  (send *pr2* :rarm :angle-vector #f(-25 0 0 -130 0 0 0))
  (send *ri* :angle-vector (send *pr2* :angle-vector))
  (pick (send *room73b2* :object "room73b2-pockey") :arm :larm :use-torso t)
  ;;(send *ri* :go-pos-unsafe -0.3 0 0)
  ;;  (send *ri* :robot :larm :end-coords :assoc (send *room73b2* :object "room73b2-pockey"))
  ;;  (send *pr2* :larm :end-coords :assoc (send *room73b2* :object "room73b2-pockey"))
  (pr2-tuckarm-pose :rarm)
  (send *pr2* :torso :waist-z :joint-angle 0)
  (send *ri* :angle-vector (send *pr2* :angle-vector))
  (send *ri* :wait-interpolation)
  (move-to-room (send *room73b2* :spot "/eng2/7f/room73B2-front-of-trashbox") "/eng2/7f/73B2")
  (release (send (send (send *room73b2* :object "room73b2-trashbox0") :copy-worldcoords) :translate #f(0 0 700)) :arm :rarm :use-torso t :rotation-axis nil)
  ;;  (send *ri* :robot :rarm :end-coords :dissoc (send *room73b2* :object "room73b2-pet2"))
  ;;  (send *pr2* :rarm :end-coords :dissoc (send *room73b2* :object "room73b2-pet2"))
  (dotimes (i 30)
    (send (send *room73b2* :object "room73b2-pet2") :translate (float-vector 0 0 (- 0 i)) :world)
    (send *ri* :viewer :draw-objects))
  (ros::spin-once)
  (send *pr2* :angle-vector (send *ri* :state :potentio-vector))
  (send *pr2* :rarm :angle-vector #f(-25 0 0 -130 0 0 0))
  (send *ri* :angle-vector (send *pr2* :angle-vector))
  (release (send (send (send *room73b2* :object "room73b2-trashbox0") :copy-worldcoords) :translate #f(0 0 700)) :arm :larm :use-torso t :rotation-axis nil)
  ;;  (send *ri* :robot :larm :end-coords :dissoc (send *room73b2* :object "room73b2-pockey"))
  ;;  (send *pr2* :larm :end-coords :dissoc (send *room73b2* :object "room73b2-pockey"))
  (dotimes (i 30)
    (send (send *room73b2* :object "room73b2-pockey") :translate (float-vector 0 0 (- 0 i)) :world)
    (send *ri* :viewer :draw-objects))
  (pr2-tuckarm-pose :larm)
  (send *pr2* :torso :waist-z :joint-angle 0)
  (send *ri* :angle-vector (send *pr2* :angle-vector))
  (send *ri* :wait-interpolation)
  (move-to-room (send *room73b2* :spot "/eng2/7f/room73B2-table-side") "/eng2/7f/73B2")
  ;;(send *pr2* :translate #f(500 0 0))
  ;;(send *ri* :go-pos-unsafe 0.5 0 0)
  (wipe-table4)
 ;; (send *ri* :go-pos-unsafe -0.5 0 0)
  (move-to-room *temporarychairspot* "/eng2/7f/73b2")
  (move-chair (send *room73b2* :object "room73b2-chair1") 0 -1.0 0 :direct :y)
  (pr2-tuckarm-pose :rarm)
  )

(defun test()
  (change-inflation-range 0.15)
  (initialize-costmap)
  (ros::spin-once)
  (send *pr2* :angle-vector (send *ri* :state :potentio-vector))
  (send *room73b2* :init)
  (send *ri* :objects (send *room73b2* :objects))
  (pr2-tuckarm-pose :larm)
  (move-to-room (send *room73b2* :spot "/eng2/7f/room73B2-front-of-trashbox") "/eng2/7f/73B2")
  (move-to-room (send *room73b2* :spot "/eng2/7f/room73B2-table-side") "/eng2/7f/73B2")
  ;; (send *pr2* :larm :angle-vector #f(0 50 70 -125 50 -120 160))
  ;; (send *pr2* :rarm :angle-vector #f(-5 65 -105 -90 70 0 20))
  ;; (send *ri* :angle-vector (send *pr2* :angle-vector))
  ;; (send *ri* :wait-interpolation)
  (send *pr2* :angle-vector (send *ri* :state :potentio-vector))
  (pick (send *room73b2* :object "room73b2-sushi-cup2") :arm :larm :use-torso t)
  ;; (pick (send *room73b2* :object "room73b2-pockey") :arm :larm :use-torso t)
  ;; (pick (send *room73b2* :object "room73b2-pet2") :arm :rarm :use-torso t)
  )

(defun test2()
  (let ((spot (make-cascoords :pos (float-vector 3050.0 1850.0 0.0) :rot #2f((-1.0 0.0 0.0) (0.0 -1.0 0.0) (0.0 0.0 1.0))))
	(obj (make-cascoords :pos (float-vector 2275.0 1850.0 860.0) :rot #2f((-1.0 0.0 0.0) (0.0 -1.0 0.0) (0.0 0.0 1.0)))))
  (change-inflation-range 0.15)
  (initialize-costmap)
  (ros::spin-once)
  (send *pr2* :angle-vector (send *ri* :state :potentio-vector))
  (send *room73b2* :init)
  (send (send *room73b2* :object "room73b2-sushi-cup2") :move-to obj :world)
  (pr2-tuckarm-pose :larm)
  (move-to-room (send *room73b2* :spot "/eng2/7f/room73B2-beside-bed") "/eng2/7f/73B2")
  (move-to-room spot "/eng2/7f/73B2")
  (send *pr2* :angle-vector (send *ri* :state :potentio-vector))
  (pick (send *room73b2* :object "room73b2-sushi-cup2") :arm :larm :use-torso t)
  ))

(defun test3()
  (let ((spot (make-cascoords :pos (float-vector 3050.0 1850.0 0.0) :rot #2f((-1.0 0.0 0.0) (0.0 -1.0 0.0) (0.0 0.0 1.0))))
	(obj (make-cascoords :pos (float-vector 2275.0 1850.0 860.0) :rot #2f((-1.0 0.0 0.0) (0.0 -1.0 0.0) (0.0 0.0 1.0))))
	objs lobj robj)
  (change-inflation-range 0.15)
  (initialize-costmap)
  (ros::spin-once)
  (send *pr2* :angle-vector (send *ri* :state :potentio-vector))
  (send *room73b2* :init)
  (send (send *room73b2* :object "room73b2-sushi-cup2") :move-to obj :world)
  (pr2-tuckarm-pose :larm)
  (move-to-room (send *room73b2* :spot "/eng2/7f/room73B2-beside-bed") "/eng2/7f/73B2")
  (move-to-room spot "/eng2/7f/73B2")
  (ros::spin-once)
  (send *pr2* :angle-vector (send *ri* :state :potentio-vector))
  (send *pr2* :head :look-at (send obj :worldpos) :world)
  (send *ri* :angle-vector (send *pr2* :angle-vector))
  (send *ri* :wait-interpolation)
  (setq objs (tabletop_obj))
  (if (> (elt (car objs) 1) (elt (cadr objs) 1))
      (progn
	(setq lobj (car objs))
	(setq robj (cadr objs)))
    (progn
      (setq lobj (cadr objs))
      (setq robj (car objs))))
  (pick2 (scale 1000 lobj) :arm :larm :use-torso t)
  (pick2 (scale 1000 robj) :arm :rarm :use-torso t)
  (pr2-tuckarm-pose :larm)
  ))
