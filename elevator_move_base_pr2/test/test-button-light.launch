<launch>

  <param name="use_sim_time" value="true"/>
  <include file="$(find pr2_machine)/sim.machine"/>
  <include file="$(find elevator_move_base_pr2)/launch/elevator_move_base_modules.xml" />

  <!-- inputs are tf, image_raw, camera_info, joint_states -->
  <node pkg="rosbag" type="play" name="rosbag_play"
        args="$(find elevator_move_base_pr2)/test/test-button-light.bag -l --clock" />

  <!-- tf, EusModel -> viewtarget -->
  <!-- image_raw, camera_info, view_target -> light_button -->
  <group ns="/wide_stereo/left" >
    <node pkg="image_proc" type="image_proc" name="image_proc"/>
  </group>

  <!-- test for button color recognition -->
  <test test-name="button_light" pkg="roseus" type="roseus" time-limit="300"
	args="$(find elevator_move_base_pr2)/test/test-button-light.l"/>

  <sphinxdoc><![CDATA[
This scripts is test for elevator call panel.

The bagfile contains these topics.
narrow_stereo/left/{camera_info,image_raw}, joint_states,, tf, view_point

Tests check equality of
narrow_stereo/left/{camera_info,image_raw} -> panel pose in /tf
tf, joint_states -> view_point
view_point, image_rect -> light_button

.. image:: build/call-panel-pose.mp4
  :width: 600

Then check the button color to detect the button was pushed.
The button area in the camera image is calcurated from Euslisp camera model and panel object model.

.. image:: build/call-panel-lighting.mp4
  :width: 600

.. image:: build/call-panel-lighting-not.mp4
  :width: 600

  ]]></sphinxdoc>

  <anode type="rviz" pkg="rviz" name="rviz" respawn="true"
        args="-d $(find elevator_move_base_pr2)/test/test-button-light.vcg"
        launch-prefix="glc-capture --start --out=$(find elevator_move_base_pr2)/build/test-button-light.glc" />

  <!-- we assume test code is invoked in alphabet order of test-name -->
  <atest type="glc_encode.sh" pkg="jsk_tools" test-name="z_encode_test1" args="$(find elevator_move_base_pr2)/build/test-button-light.glc --ctx 1 -o $(find elevator_move_base_pr2)/build/test-button-light.mp4" time-limit="300"/>

</launch>
